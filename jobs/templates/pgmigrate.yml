
apiVersion: batch/v1
kind: Job
metadata:
  name: pgloader-migrate
  annotations:
  argocd.argoproj.io/hook: Sync
  argocd.argoproj.io/hook-delete-policy: HookSucceeded
  argocd.argoproj.io/sync-wave: "1"
spec:
  template:
    spec:
      volumes: 
      - name: db-storage
        persistentVolumeClaim:
          claimName: pvc-db-to-migrate
      containers:
      - name: pgloader
        volumeMounts:
        - mountPath: /db
          name: db-storage
        image: ghcr.io/rdartus/pgloader
        command:
        - /bin/sh
        - -c
        - |
          pgloader --with "quote identifiers" --with "data only" /db/radarr.db 'postgresql://{{.Values.db.user}}:{{.Values.db.userPass}}@{{.Values.db.appName}}.{{.Values.db.namespace}}.svc.cluster.local/radarr-main'
          pgloader --with "quote identifiers" --with "data only" /db/sonarr.db 'postgresql://{{.Values.db.user}}:{{.Values.db.userPass}}@{{.Values.db.appName}}.{{.Values.db.namespace}}.svc.cluster.local/sonarr-main'
          pgloader --with "quote identifiers" --with "data only" /db/prowlarr.db 'postgresql://{{.Values.db.user}}:{{.Values.db.userPass}}@{{.Values.db.appName}}.{{.Values.db.namespace}}.svc.cluster.local/prowlarr-main'
          
      restartPolicy: Never
      # affinity:
      #   nodeSelector:
      #     nodeSelectorTerms:
      #     - matchExpressions:
      #       - key: kubernetes.io/hostname
      #         operator: In
      #         values:
      #         - pirate
  backoffLimit: 0