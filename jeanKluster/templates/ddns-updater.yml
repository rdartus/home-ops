apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ddns-updater
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "50"

spec:
  destination:
    namespace: ddns-updater
    server: {{ .Values.dest_server }}
  project: default
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - CreateNamespace=true
  source:
    path: localApps/ddns-updater
    repoURL: https://github.com/rdartus/k3s-argo.git
    targetRevision: main
    helm : 
      values: |

        controllers:
          main:
            containers:
              main:
                image:
                  # -- image repository
                  repository: qmcgaw/ddns-updater
                  # -- image tag
                  tag: latest
                  # -- image pull policy
                  pullPolicy: IfNotPresent
                env:
                  - secretRef:
                      name: "ddns-updater-config"


        secrets:
          secret:
            # -- Enables or disables the Secret
            enabled: false
            # -- Labels to add to the Secret
            labels: {}
            # -- Annotations to add to the Secret
            annotations: {}
            # -- Secret stringData content. Helm template enabled.
            stringData:
              {}
              # foo: bar

        # -- Configure configMaps for the chart here.
        # Additional configMaps can be added by adding a dictionary key similar to the 'config' object.
        # @default -- See below
        configMaps:
          config:
            # -- Enables or disables the configMap
            enabled: false
            # -- Labels to add to the configMap
            labels: {}
            # -- Annotations to add to the configMap
            annotations: {}
            # -- configMap data content. Helm template enabled.
            data:
              {}
              # foo: bar

        # -- Configure the services for the chart here.
        # Additional services can be added by adding a dictionary key similar to the 'main' service.
        # @default -- See below
        service:
          main:
            # -- Enables or disables the service
            enabled: true

            # -- Override the name suffix that is used for this service
            nameOverride:

            # -- Configure which controller this service should target
            controller: main

            # -- Make this the primary service for this controller (used in probes, notes, etc...).
            # If there is more than 1 service targeting the controller, make sure that only 1 service is
            # marked as primary.
            primary: true

            # -- Set the service type
            type: ClusterIP

            # -- Specify the externalTrafficPolicy for the service. Options: Cluster, Local
            # -- [[ref](https://kubernetes.io/docs/tutorials/services/source-ip/)]
            externalTrafficPolicy:

            # -- Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
            ipFamilyPolicy:
            # -- The ip families that should be used. Options: IPv4, IPv6
            ipFamilies: []

            # -- Provide additional annotations which may be required.
            annotations: {}

            # -- Provide additional labels which may be required.
            labels: {}

            # -- Allow adding additional match labels
            extraSelectorLabels: {}

            # -- Configure the Service port information here.
            # Additional ports can be added by adding a dictionary key similar to the 'http' service.
            # @default -- See below
            ports:
              http:
                # -- Enables or disables the port
                enabled: true

                # -- Make this the primary port (used in probes, notes, etc...)
                # If there is more than 1 service, make sure that only 1 port is marked as primary.
                primary: true

                # -- The port number
                port: 8000

                # -- Port protocol.
                # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
                # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
                protocol: HTTP

        # -- Configure the ingresses for the chart here.
        # Additional ingresses can be added by adding a dictionary key similar to the 'main' ingress.
        # @default -- See below
        ingress:
          main:
            # -- Enables or disables the ingress
            enabled: false

            # -- Make this the primary ingress (used in probes, notes, etc...).
            # If there is more than 1 ingress, make sure that only 1 ingress is marked as primary.
            primary: true

            # -- Override the name suffix that is used for this ingress.
            nameOverride:

            # -- Provide additional annotations which may be required.
            annotations:
              {}
              # kubernetes.io/ingress.class: nginx
              # kubernetes.io/tls-acme: "true"

            # -- Provide additional labels which may be required.
            labels: {}

            # -- Set the ingressClass that is used for this ingress.
            className: # "nginx"

            # -- Configure the defaultBackend for this ingress. This will disable any other rules for the ingress.
            defaultBackend:

            ## Configure the hosts for the ingress
            hosts:
              - # -- Host address. Helm template can be passed.
                host: ddns-updater
                ## Configure the paths for the host
                paths:
                  - # -- Path.  Helm template can be passed.
                    path: /
                    pathType: Prefix
                    service:
                      # -- Overrides the service name reference for this path
                      # This can be an actual service name, or reference a service identifier
                      # from this values.yaml
                      name: main
                      # -- Overrides the service port number reference for this path
                      port:

            # -- Configure TLS for the ingress. Both secretName and hosts can process a Helm template.
            tls: []
            #  - secretName: chart-example-tls
            #    hosts:
            #      - chart-example.local
