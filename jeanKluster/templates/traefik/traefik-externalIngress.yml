apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: pi-ingress
  namespace: traefik
  annotations:
    # traefik.ingress.kubernetes.io/router.entrypoints: websecure
    # traefik.ingress.kubernetes.io/router.tls: "true" # A ne pas utiliser si le trafik du cluster ne doit pas g√©rer les certifs
    traefik.ingress.kubernetes.io/service.serversscheme: https
    traefik.ingress.kubernetes.io/service.serverstransport: "insecure@kubernetescrd"
    argocd.argoproj.io/sync-wave: "-100"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  entryPoints:
    - websecure
  routes:
  - match: HostSNI(`tor.dartus.fr`)
      services:
        - name: pi-external
          port: 443

  - match: HostSNI(`radarr.dartus.fr`)
      services:
        - name: pi-external
          port: 443

  - match: HostSNI(`sonarr.dartus.fr`)
      services:
        - name: pi-external
          port: 443

  - match: HostSNI(`stream.dartus.fr`)
      services:
        - name: pi-external
          port: 443

  - match: HostSNI(`authelia.dartus.fr`)
      services:
        - name: pi-external
          port: 443

  - match: HostSNI(`prowlarr.dartus.fr`)
      services:
        - name: pi-external
          port: 443

  - match: HostSNI(`cloud.dartus.fr`)
      services:
        - name: pi-external
          port: 443

  - match: HostSNI(`livres.dartus.fr`)
      services:
        - name: pi-external
          port: 443

  - match: HostSNI(`books.dartus.fr`)
      services:
        - name: pi-external
          port: 443

  - match: HostSNI(`traefik.dartus.fr`)
      services:
        - name: pi-external
          port: 443

