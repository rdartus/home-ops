# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/heads/main/charts/library/common/values.schema.json
---
controllers:
  kromgo:
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: ghcr.io/kashalls/kromgo
          tag: v0.7.0@sha256:98202ba862023c1f78c6bc227f1de89d7777e5f621333511241a6242a230880e
        env:
          PROMETHEUS_URL: http://kube-prometeus-stack-kube-prometheus.observability.svc.cluster.local:9090
          SERVER_PORT: &port 80
          HEALTH_PORT: &healthPort 8080
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /readyz
                port: *healthPort
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 64Mi
      tools:
        dependsOn: []
        image:
          repository: alpine/git
          tag: latest
          # -- image pull policy
          pullPolicy: IfNotPresent
        command:
          - "sh"
          - "-c"
          - "while true; do sleep 6000; done"

defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000

service:
  app:
    ports:
      http:
        port: *port
      health:
        port: *healthPort
ingress:
  app:
    enabled: true
    annotations:
      hajimari.io/enable: "true"
      hajimari.io/group: "Media"
      hajimari.io/icon: "bookshelf"
      hajimari.io/appName: "livres"
      cert-manager.io/cluster-issuer: zerossl-prod
      acme.cert-manager.io/http01-edit-in-place: "false"
    
    className: traefik-ingresses

    hosts:
      - host: "{{ .Release.Name }}.dartus.fr"
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: http
    tls:
      - hosts:
        - "{{ .Release.Name }}.dartus.fr"
        secretName: "{{ .Release.Name }}.dartus.fr-tls"
configMaps:
  config:
    enabled: true
    data:
      config.yaml: |
          ---
          # yaml-language-server: $schema=https://raw.githubusercontent.com/kashalls/kromgo/main/config.schema.json
          badge:
            font: Verdana.ttf
            size: 12

          metrics:
            - name: talos_version
              query: label_replace(node_os_info{name="Talos"}, "version_id", "$1", "version_id", "v(.+)")
              label: version_id
              title: Talos

            - name: kubernetes_version
              query: label_replace(kubernetes_build_info{service="kubernetes"}, "git_version", "$1", "git_version", "v(.+)")
              label: git_version
              title: Kubernetes

            - name: flux_version
              query: label_replace(flux_instance_info, "revision", "$1", "revision", "v(.+)@sha256:.+")
              label: revision
              title: Flux

            - name: cluster_node_count
              query: count(count by (node) (kube_node_status_condition{condition="Ready"}))
              colors:
                - { color: "green", min: 0, max: 9999 }
              title: Nodes

            - name: cluster_pod_count
              query: sum(kube_pod_status_phase{phase="Running"})
              colors:
                - { color: "green", min: 0, max: 9999 }
              title: Pods

            - name: cluster_cpu_usage
              query: round(avg(instance:node_cpu_utilisation:rate5m{kubernetes_node!=""}) * 100, 0.1)
              suffix: "%"
              colors:
                - { color: "green", min: 0, max: 35 }
                - { color: "orange", min: 36, max: 75 }
                - { color: "red", min: 76, max: 9999 }
              title: CPU

            - name: cluster_memory_usage
              query: round(sum(node_memory_MemTotal_bytes{kubernetes_node!=""} - node_memory_MemAvailable_bytes{kubernetes_node!=""}) / sum(node_memory_MemTotal_bytes{kubernetes_node!=""}) * 100, 0.1)
              suffix: "%"
              colors:
                - { color: green, min: 0, max: 35 }
                - { color: orange, min: 36, max: 75 }
                - { color: red, min: 76, max: 9999 }
              title: Memory

            - name: cluster_power_usage
              query: round(upsHighPrecOutputLoad, 0.1)
              suffix: "w"
              colors:
                - { color: "green", min: 0, max: 400 }
                - { color: "orange", min: 401, max: 750 }
                - { color: "red", min: 751, max: 9999 }
              title: Power

            - name: cluster_age_days
              query: round((time() - min(kube_node_created) ) / 86400)
              suffix: "d"
              colors:
                - { color: "green", min: 0, max: 180 }
                - { color: "orange", min: 181, max: 360 }
                - { color: "red", min: 361, max: 9999 }
              title: Age

            - name: cluster_uptime_days
              query: round(avg(node_time_seconds{kubernetes_node!=""} - node_boot_time_seconds{kubernetes_node!=""}) / 86400)
              suffix: "d"
              colors:
                - { color: "green", min: 0, max: 180 }
                - { color: "orange", min: 181, max: 360 }
                - { color: "red", min: 361, max: 9999 }
              title: Uptime

            - name: cluster_alert_count
              query: alertmanager_alerts{state="active"} - 1 # Ignore Watchdog
              colors:
                - { color: "green", min: 0, max: 0 }
                - { color: "red", min: 1, max: 9999 }
              title: Alerts

persistence:
  config:
    type: configMap
    identifier: config
    globalMounts:
      - path: /kromgo/config.yaml
        subPath: config.yaml
        readOnly: true