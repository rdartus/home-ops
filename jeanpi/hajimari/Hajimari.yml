apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: hajimari
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io/background
spec:
  destination:
    namespace: hajimari
    server: https://kubernetes.default.svc
  project: default
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - CreateNamespace=true
  source:
    chart: hajimari
    targetRevision: "*"
    repoURL: https://hajimari.io
    helm : 
      values: |

        #
        # IMPORTANT NOTE
        #
        # This chart inherits from the bjw-s library chart. You can check the default values/options here:
        # https://github.com/bjw-s/helm-charts/tree/main/charts/library/common
        #

        image:
          # -- image repository
          repository: ghcr.io/toboshii/hajimari
          # -- image pull policy
          pullPolicy: IfNotPresent
          # -- image tag
          tag: v0.3.1

        # -- environment variables.
        # @default -- See below
        env:
          # -- Set the container timezone
          TZ: UTC

        # -- Configures Hajimari settings for this instance.
        # @default -- See below
        hajimari:
          # -- The name of this instance, this allows running multiple 
          # instances of Hajimari on the same cluster
          instanceName: null

          # -- Set to true to show all discovered applications by default.
          defaultEnable: false

          # -- Namespace selector to use for discovering applications
          namespaceSelector:
            matchNames:
            - Argocd
            - podinfo
            
          # -- Override the title of the Hajimari pages
          title: null

          # -- Default name for welcome message
          name: "You"

          # -- Add custom applications to the discovered application list
          customApps: []
          # - group: Media
          #   apps:
          #     - name: Test
          #       url: 'https://example.com'
          #       icon: 'mdi:test-tube'
          #       info: This is a test app

          # -- Create sample Custom Resource Application
          createCRAppSample: false

          # -- Set default bookmarks
          globalBookmarks: []
          # - group: Communicate
          #   bookmarks:
          #   - name: Discord
          #     url: 'https://discord.com'
          #   - name: Gmail
          #     url: 'http://gmail.com'
          #   - name: Slack
          #     url: 'https://slack.com/signin'


        # -- Configures service settings for the chart.
        # @default -- See values.yaml
        service:
          main:
            ports:
              http:
                port: 3000

        # -- Configures service account needed for reading k8s ingress objects
        # @default -- See below
        serviceAccount:
          # -- Create service account
          create: true


        # -- Configure persistence settings for the chart under this key.
        # @default -- See values.yaml
        persistence:
          data:
            enabled: true
            type: pvc
            accessMode: ReadWriteOnce
            size: 1Gi


        ingress:
          main:
            # -- Enables or disables the ingress
            enabled: true

            # -- Make this the primary ingress (used in probes, notes, etc...).
            # If there is more than 1 ingress, make sure that only 1 ingress is marked as primary.
            primary: true

            # -- Override the name suffix that is used for this ingress.
            nameOverride:

            # -- Provide additional annotations which may be required.
            annotations:
              kubernetes.io/ingress.class: pdpdpd

            # -- Provide additional labels which may be required.
            labels: {}

            # -- Set the ingressClass that is used for this ingress.
            className: "traefik-ingresses"

            # -- Configure the defaultBackend for this ingress. This will disable any other rules for the ingress.
            defaultBackend:
              service:
                name: "hajimari"
                port:
                  number : 3001

            # ## Configure the hosts for the ingress
            # hosts:
            #   - # -- Host address. Helm template can be passed.
            #     host: chart-example.local
            #     ## Configure the paths for the host
            #     paths:
            #       - # -- Path.  Helm template can be passed.
            #         path: /
            #         pathType: Prefix
            #         service:
            #           # -- Overrides the service name reference for this path
            #           # This can be an actual service name, or reference a service identifier
            #           # from this values.yaml
            #           name: main
            #           # -- Overrides the service port number reference for this path
            #           port:

            # -- Configure TLS for the ingress. Both secretName and hosts can process a Helm template.
            tls: []
            #  - secretName: chart-example-tls
            #    hosts:
            #      - chart-example.local
